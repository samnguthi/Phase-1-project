<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0310.1044                               -->
<workbook original-version='18.1' source-build='2023.1.0 (20231.23.0310.1044)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='aviation_data' inline='true' name='federated.166iza917b2lf118ghat81r5rgux' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='aviation_data' name='textscan.1qf3eez1rhzh9o14f5qgl1ebo0ru'>
            <connection class='textscan' directory='C:/Users/Administrator/Downloads' filename='aviation_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1qf3eez1rhzh9o14f5qgl1ebo0ru' name='aviation_data.csv' table='[aviation_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Event.Id' ordinal='0' />
            <column datatype='string' name='Investigation.Type' ordinal='1' />
            <column datatype='date' name='Event.Date' ordinal='2' />
            <column datatype='string' name='Location' ordinal='3' />
            <column datatype='string' name='Country' ordinal='4' />
            <column datatype='string' name='Latitude' ordinal='5' />
            <column datatype='string' name='Longitude' ordinal='6' />
            <column datatype='string' name='Injury.Severity' ordinal='7' />
            <column datatype='string' name='Aircraft.damage' ordinal='8' />
            <column datatype='string' name='Aircraft.Category' ordinal='9' />
            <column datatype='string' name='Make' ordinal='10' />
            <column datatype='string' name='Model' ordinal='11' />
            <column datatype='string' name='Amateur.Built' ordinal='12' />
            <column datatype='real' name='Number.of.Engines' ordinal='13' />
            <column datatype='string' name='Engine.Type' ordinal='14' />
            <column datatype='string' name='Purpose.of.flight' ordinal='15' />
            <column datatype='real' name='Total.Fatal.Injuries' ordinal='16' />
            <column datatype='real' name='Total.Serious.Injuries' ordinal='17' />
            <column datatype='real' name='Total.Minor.Injuries' ordinal='18' />
            <column datatype='real' name='Total.Uninjured' ordinal='19' />
            <column datatype='string' name='Weather.Condition' ordinal='20' />
            <column datatype='string' name='Broad.phase.of.flight' ordinal='21' />
            <column datatype='real' name='Total.Injuries' ordinal='22' />
            <column datatype='boolean' name='Serious.Issue' ordinal='23' />
            <column datatype='integer' name='Year' ordinal='24' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1qf3eez1rhzh9o14f5qgl1ebo0ru' name='aviation_data.csv' table='[aviation_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Event.Id' ordinal='0' />
            <column datatype='string' name='Investigation.Type' ordinal='1' />
            <column datatype='date' name='Event.Date' ordinal='2' />
            <column datatype='string' name='Location' ordinal='3' />
            <column datatype='string' name='Country' ordinal='4' />
            <column datatype='string' name='Latitude' ordinal='5' />
            <column datatype='string' name='Longitude' ordinal='6' />
            <column datatype='string' name='Injury.Severity' ordinal='7' />
            <column datatype='string' name='Aircraft.damage' ordinal='8' />
            <column datatype='string' name='Aircraft.Category' ordinal='9' />
            <column datatype='string' name='Make' ordinal='10' />
            <column datatype='string' name='Model' ordinal='11' />
            <column datatype='string' name='Amateur.Built' ordinal='12' />
            <column datatype='real' name='Number.of.Engines' ordinal='13' />
            <column datatype='string' name='Engine.Type' ordinal='14' />
            <column datatype='string' name='Purpose.of.flight' ordinal='15' />
            <column datatype='real' name='Total.Fatal.Injuries' ordinal='16' />
            <column datatype='real' name='Total.Serious.Injuries' ordinal='17' />
            <column datatype='real' name='Total.Minor.Injuries' ordinal='18' />
            <column datatype='real' name='Total.Uninjured' ordinal='19' />
            <column datatype='string' name='Weather.Condition' ordinal='20' />
            <column datatype='string' name='Broad.phase.of.flight' ordinal='21' />
            <column datatype='real' name='Total.Injuries' ordinal='22' />
            <column datatype='boolean' name='Serious.Issue' ordinal='23' />
            <column datatype='integer' name='Year' ordinal='24' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[aviation_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Event.Id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Event.Id]</local-name>
            <parent-name>[aviation_data.csv]</parent-name>
            <remote-alias>Event.Id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[aviation_data.csv_66B1E7451E2D4FD1BBF9754AB5FA1C3A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Investigation.Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Investigation.Type]</local-name>
            <parent-name>[aviation_data.csv]</parent-name>
            <remote-alias>Investigation.Type</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[aviation_data.csv_66B1E7451E2D4FD1BBF9754AB5FA1C3A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Event.Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Event.Date]</local-name>
            <parent-name>[aviation_data.csv]</parent-name>
            <remote-alias>Event.Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[aviation_data.csv_66B1E7451E2D4FD1BBF9754AB5FA1C3A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[aviation_data.csv]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[aviation_data.csv_66B1E7451E2D4FD1BBF9754AB5FA1C3A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[aviation_data.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[aviation_data.csv_66B1E7451E2D4FD1BBF9754AB5FA1C3A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[aviation_data.csv]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[aviation_data.csv_66B1E7451E2D4FD1BBF9754AB5FA1C3A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[aviation_data.csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[aviation_data.csv_66B1E7451E2D4FD1BBF9754AB5FA1C3A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Injury.Severity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Injury.Severity]</local-name>
            <parent-name>[aviation_data.csv]</parent-name>
            <remote-alias>Injury.Severity</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[aviation_data.csv_66B1E7451E2D4FD1BBF9754AB5FA1C3A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Aircraft.damage</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Aircraft.damage]</local-name>
            <parent-name>[aviation_data.csv]</parent-name>
            <remote-alias>Aircraft.damage</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[aviation_data.csv_66B1E7451E2D4FD1BBF9754AB5FA1C3A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Aircraft.Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Aircraft.Category]</local-name>
            <parent-name>[aviation_data.csv]</parent-name>
            <remote-alias>Aircraft.Category</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[aviation_data.csv_66B1E7451E2D4FD1BBF9754AB5FA1C3A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Make</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Make]</local-name>
            <parent-name>[aviation_data.csv]</parent-name>
            <remote-alias>Make</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[aviation_data.csv_66B1E7451E2D4FD1BBF9754AB5FA1C3A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Model</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Model]</local-name>
            <parent-name>[aviation_data.csv]</parent-name>
            <remote-alias>Model</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[aviation_data.csv_66B1E7451E2D4FD1BBF9754AB5FA1C3A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Amateur.Built</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Amateur.Built]</local-name>
            <parent-name>[aviation_data.csv]</parent-name>
            <remote-alias>Amateur.Built</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[aviation_data.csv_66B1E7451E2D4FD1BBF9754AB5FA1C3A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number.of.Engines</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Number.of.Engines]</local-name>
            <parent-name>[aviation_data.csv]</parent-name>
            <remote-alias>Number.of.Engines</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[aviation_data.csv_66B1E7451E2D4FD1BBF9754AB5FA1C3A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Engine.Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Engine.Type]</local-name>
            <parent-name>[aviation_data.csv]</parent-name>
            <remote-alias>Engine.Type</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[aviation_data.csv_66B1E7451E2D4FD1BBF9754AB5FA1C3A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Purpose.of.flight</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Purpose.of.flight]</local-name>
            <parent-name>[aviation_data.csv]</parent-name>
            <remote-alias>Purpose.of.flight</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[aviation_data.csv_66B1E7451E2D4FD1BBF9754AB5FA1C3A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total.Fatal.Injuries</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total.Fatal.Injuries]</local-name>
            <parent-name>[aviation_data.csv]</parent-name>
            <remote-alias>Total.Fatal.Injuries</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[aviation_data.csv_66B1E7451E2D4FD1BBF9754AB5FA1C3A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total.Serious.Injuries</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total.Serious.Injuries]</local-name>
            <parent-name>[aviation_data.csv]</parent-name>
            <remote-alias>Total.Serious.Injuries</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[aviation_data.csv_66B1E7451E2D4FD1BBF9754AB5FA1C3A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total.Minor.Injuries</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total.Minor.Injuries]</local-name>
            <parent-name>[aviation_data.csv]</parent-name>
            <remote-alias>Total.Minor.Injuries</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[aviation_data.csv_66B1E7451E2D4FD1BBF9754AB5FA1C3A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total.Uninjured</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total.Uninjured]</local-name>
            <parent-name>[aviation_data.csv]</parent-name>
            <remote-alias>Total.Uninjured</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[aviation_data.csv_66B1E7451E2D4FD1BBF9754AB5FA1C3A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weather.Condition</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Weather.Condition]</local-name>
            <parent-name>[aviation_data.csv]</parent-name>
            <remote-alias>Weather.Condition</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[aviation_data.csv_66B1E7451E2D4FD1BBF9754AB5FA1C3A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Broad.phase.of.flight</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Broad.phase.of.flight]</local-name>
            <parent-name>[aviation_data.csv]</parent-name>
            <remote-alias>Broad.phase.of.flight</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[aviation_data.csv_66B1E7451E2D4FD1BBF9754AB5FA1C3A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total.Injuries</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total.Injuries]</local-name>
            <parent-name>[aviation_data.csv]</parent-name>
            <remote-alias>Total.Injuries</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[aviation_data.csv_66B1E7451E2D4FD1BBF9754AB5FA1C3A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Serious.Issue</remote-name>
            <remote-type>11</remote-type>
            <local-name>[Serious.Issue]</local-name>
            <parent-name>[aviation_data.csv]</parent-name>
            <remote-alias>Serious.Issue</remote-alias>
            <ordinal>23</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[aviation_data.csv_66B1E7451E2D4FD1BBF9754AB5FA1C3A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[aviation_data.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[aviation_data.csv_66B1E7451E2D4FD1BBF9754AB5FA1C3A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Aircraft.Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[Aircraft.damage]' role='dimension' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[Total.Fatal.Injuries]' role='measure' type='quantitative' />
      <column datatype='real' name='[Total.Injuries]' role='measure' type='quantitative' />
      <column datatype='real' name='[Total.Minor.Injuries]' role='measure' type='quantitative' />
      <column datatype='real' name='[Total.Uninjured]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='aviation_data.csv' datatype='table' name='[__tableau_internal_object_id__].[aviation_data.csv_66B1E7451E2D4FD1BBF9754AB5FA1C3A]' role='measure' type='quantitative' />
      <column-instance column='[Aircraft.Category]' derivation='None' name='[none:Aircraft.Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Aircraft.damage]' derivation='None' name='[none:Aircraft.damage:nk]' pivot='key' type='nominal' />
      <column-instance column='[Total.Fatal.Injuries]' derivation='Sum' name='[sum:Total.Fatal.Injuries:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total.Injuries]' derivation='Sum' name='[sum:Total.Injuries:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total.Minor.Injuries]' derivation='Sum' name='[sum:Total.Minor.Injuries:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total.Uninjured]' derivation='Sum' name='[sum:Total.Uninjured:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Exclusions (Aircraft.Category,Aircraft.damage)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Aircraft.Category:nk]' />
          <groupfilter function='level-members' level='[none:Aircraft.damage:nk]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.166iza917b2lf118ghat81r5rgux].[sum:Total.Fatal.Injuries:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.166iza917b2lf118ghat81r5rgux].[sum:Total.Uninjured:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.166iza917b2lf118ghat81r5rgux].[sum:Total.Injuries:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.166iza917b2lf118ghat81r5rgux]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.166iza917b2lf118ghat81r5rgux].[sum:Total.Minor.Injuries:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='aviation_data.csv' id='aviation_data.csv_66B1E7451E2D4FD1BBF9754AB5FA1C3A'>
            <properties context=''>
              <relation connection='textscan.1qf3eez1rhzh9o14f5qgl1ebo0ru' name='aviation_data.csv' table='[aviation_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Event.Id' ordinal='0' />
                  <column datatype='string' name='Investigation.Type' ordinal='1' />
                  <column datatype='date' name='Event.Date' ordinal='2' />
                  <column datatype='string' name='Location' ordinal='3' />
                  <column datatype='string' name='Country' ordinal='4' />
                  <column datatype='string' name='Latitude' ordinal='5' />
                  <column datatype='string' name='Longitude' ordinal='6' />
                  <column datatype='string' name='Injury.Severity' ordinal='7' />
                  <column datatype='string' name='Aircraft.damage' ordinal='8' />
                  <column datatype='string' name='Aircraft.Category' ordinal='9' />
                  <column datatype='string' name='Make' ordinal='10' />
                  <column datatype='string' name='Model' ordinal='11' />
                  <column datatype='string' name='Amateur.Built' ordinal='12' />
                  <column datatype='real' name='Number.of.Engines' ordinal='13' />
                  <column datatype='string' name='Engine.Type' ordinal='14' />
                  <column datatype='string' name='Purpose.of.flight' ordinal='15' />
                  <column datatype='real' name='Total.Fatal.Injuries' ordinal='16' />
                  <column datatype='real' name='Total.Serious.Injuries' ordinal='17' />
                  <column datatype='real' name='Total.Minor.Injuries' ordinal='18' />
                  <column datatype='real' name='Total.Uninjured' ordinal='19' />
                  <column datatype='string' name='Weather.Condition' ordinal='20' />
                  <column datatype='string' name='Broad.phase.of.flight' ordinal='21' />
                  <column datatype='real' name='Total.Injuries' ordinal='22' />
                  <column datatype='boolean' name='Serious.Issue' ordinal='23' />
                  <column datatype='integer' name='Year' ordinal='24' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Aircraft damage/category by Injuries'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='20'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='aviation_data' name='federated.166iza917b2lf118ghat81r5rgux' />
          </datasources>
          <datasource-dependencies datasource='federated.166iza917b2lf118ghat81r5rgux'>
            <column datatype='string' name='[Aircraft.Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Aircraft.damage]' role='dimension' type='nominal' />
            <column datatype='real' name='[Total.Injuries]' role='measure' type='quantitative' />
            <column-instance column='[Aircraft.Category]' derivation='None' name='[none:Aircraft.Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Aircraft.damage]' derivation='None' name='[none:Aircraft.damage:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total.Injuries]' derivation='Sum' name='[sum:Total.Injuries:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.166iza917b2lf118ghat81r5rgux].[Exclusions (Aircraft.Category,Aircraft.damage)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Aircraft.Category:nk]' />
                <groupfilter function='level-members' level='[none:Aircraft.damage:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Aircraft.Category:nk]' member='&quot;Unknown&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:Aircraft.damage:nk]' member='&quot;Destroyed&quot;' />
                  <groupfilter function='member' level='[none:Aircraft.damage:nk]' member='&quot;Minor&quot;' />
                  <groupfilter function='member' level='[none:Aircraft.damage:nk]' member='&quot;Substantial&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.166iza917b2lf118ghat81r5rgux].[Exclusions (Aircraft.Category,Aircraft.damage)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.166iza917b2lf118ghat81r5rgux].[sum:Total.Injuries:qk]' />
              <text column='[federated.166iza917b2lf118ghat81r5rgux].[none:Aircraft.damage:nk]' />
              <text column='[federated.166iza917b2lf118ghat81r5rgux].[none:Aircraft.Category:nk]' />
              <color column='[federated.166iza917b2lf118ghat81r5rgux].[none:Aircraft.damage:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{7AFF9B5F-0BBD-478E-9366-77B2A782B401}' />
    </worksheet>
    <worksheet name='Countries by Injuries'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='20'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='aviation_data' name='federated.166iza917b2lf118ghat81r5rgux' />
          </datasources>
          <datasource-dependencies datasource='federated.166iza917b2lf118ghat81r5rgux'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Total.Injuries]' role='measure' type='quantitative' />
            <column datatype='real' name='[Total.Uninjured]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total.Injuries]' derivation='Sum' name='[sum:Total.Injuries:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total.Uninjured]' derivation='Sum' name='[sum:Total.Uninjured:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.166iza917b2lf118ghat81r5rgux].[sum:Total.Injuries:qk]' included-values='in-range'>
            <min>500.0</min>
            <max>71411.0</max>
          </filter>
          <slices>
            <column>[federated.166iza917b2lf118ghat81r5rgux].[sum:Total.Injuries:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.166iza917b2lf118ghat81r5rgux].[none:Country:nk]' value='73' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.166iza917b2lf118ghat81r5rgux].[sum:Total.Uninjured:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.166iza917b2lf118ghat81r5rgux].[sum:Total.Injuries:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.166iza917b2lf118ghat81r5rgux].[sum:Total.Uninjured:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.166iza917b2lf118ghat81r5rgux].[sum:Total.Uninjured:qk] + [federated.166iza917b2lf118ghat81r5rgux].[sum:Total.Injuries:qk])</rows>
        <cols>[federated.166iza917b2lf118ghat81r5rgux].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{19E17B49-CB07-405B-8464-7DDBFFB1A55B}' />
    </worksheet>
    <worksheet name='Global injuries'>
      <table>
        <view>
          <datasources>
            <datasource caption='aviation_data' name='federated.166iza917b2lf118ghat81r5rgux' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.166iza917b2lf118ghat81r5rgux'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Total.Injuries]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total.Injuries]' derivation='Sum' name='[sum:Total.Injuries:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.166iza917b2lf118ghat81r5rgux].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;American Samoa&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Angola&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Anguilla&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;ATLANTIC OCEAN&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bangladesh&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;CARIBBEAN SEA&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Dominica&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;GULF OF MEXICO&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Hong Kong&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kenya&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malaysia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Pacific Ocean&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;PACIFIC OCEAN&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Africa&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Korea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Arab Emirates&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.166iza917b2lf118ghat81r5rgux].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.166iza917b2lf118ghat81r5rgux].[none:Country:nk]' />
              <color column='[federated.166iza917b2lf118ghat81r5rgux].[sum:Total.Injuries:qk]' />
              <geometry column='[federated.166iza917b2lf118ghat81r5rgux].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.166iza917b2lf118ghat81r5rgux].[Latitude (generated)]</rows>
        <cols>[federated.166iza917b2lf118ghat81r5rgux].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{FF51384D-035B-444C-8AA9-CD3FA5CB1B76}' />
    </worksheet>
    <worksheet name='Injuries by Make'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='20'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='aviation_data' name='federated.166iza917b2lf118ghat81r5rgux' />
          </datasources>
          <datasource-dependencies datasource='federated.166iza917b2lf118ghat81r5rgux'>
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='real' name='[Total.Injuries]' role='measure' type='quantitative' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total.Injuries]' derivation='Sum' name='[sum:Total.Injuries:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.166iza917b2lf118ghat81r5rgux].[none:Make:nk]'>
            <groupfilter expression='SUM([Total.Injuries]) &gt;= 100.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:Make:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.166iza917b2lf118ghat81r5rgux].[none:Make:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.166iza917b2lf118ghat81r5rgux].[sum:Total.Injuries:qk]</rows>
        <cols>[federated.166iza917b2lf118ghat81r5rgux].[none:Make:nk]</cols>
      </table>
      <simple-id uuid='{24DD8233-FBFF-4DCA-8E5D-61D6ACFA6F6A}' />
    </worksheet>
    <worksheet name='Injuries by flight purpose'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='aviation_data' name='federated.166iza917b2lf118ghat81r5rgux' />
          </datasources>
          <datasource-dependencies datasource='federated.166iza917b2lf118ghat81r5rgux'>
            <column datatype='string' name='[Purpose.of.flight]' role='dimension' type='nominal' />
            <column datatype='real' name='[Total.Injuries]' role='measure' type='quantitative' />
            <column-instance column='[Purpose.of.flight]' derivation='None' name='[none:Purpose.of.flight:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total.Injuries]' derivation='Sum' name='[sum:Total.Injuries:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.166iza917b2lf118ghat81r5rgux].[sum:Total.Injuries:qk]' included-values='in-range'>
            <min>500.0</min>
            <max>42315.0</max>
          </filter>
          <slices>
            <column>[federated.166iza917b2lf118ghat81r5rgux].[sum:Total.Injuries:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.166iza917b2lf118ghat81r5rgux].[none:Purpose.of.flight:nk]' value='91' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.166iza917b2lf118ghat81r5rgux].[none:Purpose.of.flight:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.166iza917b2lf118ghat81r5rgux].[sum:Total.Injuries:qk]</rows>
        <cols>[federated.166iza917b2lf118ghat81r5rgux].[none:Purpose.of.flight:nk]</cols>
      </table>
      <simple-id uuid='{D2A3F89F-D637-48BA-9FA5-BE7C78DD469E}' />
    </worksheet>
    <worksheet name='Injuries over time.'>
      <table>
        <view>
          <datasources>
            <datasource caption='aviation_data' name='federated.166iza917b2lf118ghat81r5rgux' />
          </datasources>
          <datasource-dependencies datasource='federated.166iza917b2lf118ghat81r5rgux'>
            <column datatype='real' name='[Total.Fatal.Injuries]' role='measure' type='quantitative' />
            <column datatype='real' name='[Total.Injuries]' role='measure' type='quantitative' />
            <column datatype='real' name='[Total.Minor.Injuries]' role='measure' type='quantitative' />
            <column datatype='real' name='[Total.Serious.Injuries]' role='measure' type='quantitative' />
            <column datatype='real' name='[Total.Uninjured]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total.Fatal.Injuries]' derivation='Sum' name='[sum:Total.Fatal.Injuries:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total.Injuries]' derivation='Sum' name='[sum:Total.Injuries:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total.Minor.Injuries]' derivation='Sum' name='[sum:Total.Minor.Injuries:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total.Serious.Injuries]' derivation='Sum' name='[sum:Total.Serious.Injuries:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total.Uninjured]' derivation='Sum' name='[sum:Total.Uninjured:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.166iza917b2lf118ghat81r5rgux].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.166iza917b2lf118ghat81r5rgux].[sum:Total.Fatal.Injuries:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.166iza917b2lf118ghat81r5rgux].[sum:Total.Injuries:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.166iza917b2lf118ghat81r5rgux].[sum:Total.Minor.Injuries:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.166iza917b2lf118ghat81r5rgux].[sum:Total.Serious.Injuries:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.166iza917b2lf118ghat81r5rgux].[sum:Total.Uninjured:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.166iza917b2lf118ghat81r5rgux].[none:Year:qk]' included-values='in-range'>
            <min>1997</min>
            <max>2022</max>
          </filter>
          <slices>
            <column>[federated.166iza917b2lf118ghat81r5rgux].[:Measure Names]</column>
            <column>[federated.166iza917b2lf118ghat81r5rgux].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.166iza917b2lf118ghat81r5rgux].[sum:Total.Uninjured:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.166iza917b2lf118ghat81r5rgux].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.166iza917b2lf118ghat81r5rgux].[sum:Total.Injuries:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.166iza917b2lf118ghat81r5rgux].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.166iza917b2lf118ghat81r5rgux].[sum:Total.Uninjured:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.166iza917b2lf118ghat81r5rgux].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.166iza917b2lf118ghat81r5rgux].[sum:Total.Injuries:qk] + [federated.166iza917b2lf118ghat81r5rgux].[sum:Total.Uninjured:qk])</rows>
        <cols>[federated.166iza917b2lf118ghat81r5rgux].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{AB1D4835-A4FF-41FA-86D8-FE82668FE768}' />
    </worksheet>
    <worksheet name='Make Model correlation'>
      <table>
        <view>
          <datasources>
            <datasource caption='aviation_data' name='federated.166iza917b2lf118ghat81r5rgux' />
          </datasources>
          <datasource-dependencies datasource='federated.166iza917b2lf118ghat81r5rgux'>
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column datatype='string' name='[Model]' role='dimension' type='nominal' />
            <column datatype='real' name='[Total.Injuries]' role='measure' type='quantitative' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
            <column-instance column='[Model]' derivation='None' name='[none:Model:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total.Injuries]' derivation='Sum' name='[sum:Total.Injuries:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.166iza917b2lf118ghat81r5rgux].[none:Make:nk]'>
            <groupfilter expression='SUM([Total.Injuries]) &gt; 100.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:Make:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.166iza917b2lf118ghat81r5rgux].[sum:Total.Injuries:qk]' included-values='in-range'>
            <min>250.0</min>
            <max>1796.0</max>
          </filter>
          <slices>
            <column>[federated.166iza917b2lf118ghat81r5rgux].[none:Make:nk]</column>
            <column>[federated.166iza917b2lf118ghat81r5rgux].[sum:Total.Injuries:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.166iza917b2lf118ghat81r5rgux].[none:Model:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.166iza917b2lf118ghat81r5rgux].[sum:Total.Injuries:qk]</rows>
        <cols>([federated.166iza917b2lf118ghat81r5rgux].[none:Make:nk] / [federated.166iza917b2lf118ghat81r5rgux].[none:Model:nk])</cols>
      </table>
      <simple-id uuid='{0CD2EFF0-36CC-4412-A2C5-5C03986121B2}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Samson Analytics'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='aviation_data' name='federated.166iza917b2lf118ghat81r5rgux' />
      </datasources>
      <datasource-dependencies datasource='federated.166iza917b2lf118ghat81r5rgux'>
        <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
        <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
        <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='3' name='Global injuries' w='41200' x='42000' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='10' name='Aircraft damage/category by Injuries' w='41200' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='12' name='Injuries over time.' w='41200' x='42000' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='15' name='Injuries by Make' w='41200' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='59750' id='8' name='Global injuries' param='[federated.166iza917b2lf118ghat81r5rgux].[none:Country:nk]' type-v2='filter' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8125' id='9' name='Global injuries' pane-specification-id='0' param='[federated.166iza917b2lf118ghat81r5rgux].[sum:Total.Injuries:qk]' type-v2='color' w='16000' x='83200' y='60750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13250' id='11' name='Aircraft damage/category by Injuries' pane-specification-id='0' param='[federated.166iza917b2lf118ghat81r5rgux].[none:Aircraft.damage:nk]' type-v2='color' w='16000' x='83200' y='68875'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8625' id='13' name='Injuries over time.' param='[federated.166iza917b2lf118ghat81r5rgux].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='16000' x='83200' y='82125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8250' id='14' name='Injuries over time.' pane-specification-id='4' param='[federated.166iza917b2lf118ghat81r5rgux].[:Measure Names]' type-v2='color' w='16000' x='83200' y='90750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1500' minheight='1500' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='19' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='18' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='15' is-fixed='true' name='Injuries by Make' w='41200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='59750' id='8' mode='checkdropdown' name='Global injuries' param='[federated.166iza917b2lf118ghat81r5rgux].[none:Country:nk]' type-v2='filter' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Global injuries' w='41200' x='42000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='9' name='Global injuries' pane-specification-id='0' param='[federated.166iza917b2lf118ghat81r5rgux].[sum:Total.Injuries:qk]' type-v2='color' w='16000' x='83200' y='60750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='10' is-fixed='true' name='Aircraft damage/category by Injuries' w='41200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13250' id='11' name='Aircraft damage/category by Injuries' pane-specification-id='0' param='[federated.166iza917b2lf118ghat81r5rgux].[none:Aircraft.damage:nk]' type-v2='color' w='16000' x='83200' y='68875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8625' id='13' name='Injuries over time.' param='[federated.166iza917b2lf118ghat81r5rgux].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='16000' x='83200' y='82125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='12' is-fixed='true' name='Injuries over time.' w='41200' x='42000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8250' id='14' name='Injuries over time.' pane-specification-id='4' param='[federated.166iza917b2lf118ghat81r5rgux].[:Measure Names]' type-v2='color' w='16000' x='83200' y='90750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C16BD72B-B2CC-44B6-B5A6-D97CA1E9BBB6}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Injuries by flight purpose'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.166iza917b2lf118ghat81r5rgux].[none:Purpose.of.flight:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.166iza917b2lf118ghat81r5rgux].[none:Purpose.of.flight:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{04BF7DFA-4363-4F31-A1ED-D96D0FE6D668}' />
    </window>
    <window class='worksheet' name='Injuries by Make'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.166iza917b2lf118ghat81r5rgux].[none:Make:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{07BA932A-C26F-426F-95ED-A63BB7E45125}' />
    </window>
    <window class='worksheet' name='Make Model correlation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.166iza917b2lf118ghat81r5rgux].[none:Make:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.166iza917b2lf118ghat81r5rgux].[none:Model:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.166iza917b2lf118ghat81r5rgux].[none:Model:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{89FF86AC-1979-42C4-98CF-AD3197661D22}' />
    </window>
    <window class='worksheet' name='Countries by Injuries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.166iza917b2lf118ghat81r5rgux].[sum:Total.Injuries:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='2' param='[federated.166iza917b2lf118ghat81r5rgux].[sum:Total.Uninjured:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.166iza917b2lf118ghat81r5rgux].[none:Country:nk]</field>
            <field>[federated.166iza917b2lf118ghat81r5rgux].[sum:Total.Uninjured:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2613F421-A34A-4767-9D23-FF010C8980D7}' />
    </window>
    <window class='worksheet' name='Global injuries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.166iza917b2lf118ghat81r5rgux].[none:Country:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.166iza917b2lf118ghat81r5rgux].[sum:Total.Injuries:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.166iza917b2lf118ghat81r5rgux].[none:Country:nk]</field>
            <field>[federated.166iza917b2lf118ghat81r5rgux].[none:Latitude:nk]</field>
            <field>[federated.166iza917b2lf118ghat81r5rgux].[none:Longitude:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F9E8BEAE-5A5C-44E5-815A-9631F0E84853}' />
    </window>
    <window class='worksheet' name='Aircraft damage/category by Injuries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.166iza917b2lf118ghat81r5rgux].[none:Aircraft.damage:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.166iza917b2lf118ghat81r5rgux].[none:Aircraft.Category:nk]</field>
            <field>[federated.166iza917b2lf118ghat81r5rgux].[none:Aircraft.damage:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B494D10E-B295-4BE6-84B7-608542DE4FD9}' />
    </window>
    <window class='worksheet' name='Injuries over time.'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.166iza917b2lf118ghat81r5rgux].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='4' param='[federated.166iza917b2lf118ghat81r5rgux].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.166iza917b2lf118ghat81r5rgux].[none:Year:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.166iza917b2lf118ghat81r5rgux].[sum:Total.Injuries:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.166iza917b2lf118ghat81r5rgux].[none:Year:qk]</field>
                  <field>[federated.166iza917b2lf118ghat81r5rgux].[sum:Total.Injuries:qk]</field>
                  <field>[federated.166iza917b2lf118ghat81r5rgux].[:Measure Names]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>2002</value>
                <value>2521.0</value>
                <value>&quot;[federated.166iza917b2lf118ghat81r5rgux].[sum:Total.Injuries:qk]&quot;</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.166iza917b2lf118ghat81r5rgux].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B3AE562F-B089-4C13-B7ED-24F785AAB02D}' />
    </window>
    <window class='dashboard' maximized='true' name='Samson Analytics'>
      <viewpoints>
        <viewpoint name='Aircraft damage/category by Injuries'>
          <highlight>
            <color-one-way>
              <field>[federated.166iza917b2lf118ghat81r5rgux].[none:Aircraft.damage:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Global injuries'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Injuries by Make'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Injuries over time.'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.166iza917b2lf118ghat81r5rgux].[none:Year:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.166iza917b2lf118ghat81r5rgux].[sum:Total.Uninjured:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.166iza917b2lf118ghat81r5rgux].[none:Year:qk]</field>
                    <field>[federated.166iza917b2lf118ghat81r5rgux].[sum:Total.Uninjured:qk]</field>
                    <field>[federated.166iza917b2lf118ghat81r5rgux].[:Measure Names]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>2003</value>
                  <value>8196.0</value>
                  <value>&quot;[federated.166iza917b2lf118ghat81r5rgux].[sum:Total.Uninjured:qk]&quot;</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{1540B074-6D6C-4802-8F1B-E680F931E41C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Aircraft damage/category by Injuries' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Countries by Injuries' width='192'>
      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
      aRIAEWn/H+RNFE47KB6WAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Global injuries' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Injuries by Make' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Injuries by flight purpose' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Injuries over time.' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Make Model correlation' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Samson Analytics' width='192'>
      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
      YII=
    </thumbnail>
  </thumbnails>
</workbook>
